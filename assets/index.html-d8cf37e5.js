import{_ as o,M as p,p as l,q as c,R as n,N as e,V as t,t as a,a1 as i}from"./framework-96b046e1.js";const r={},u=i(`<h1 id="components" tabindex="-1"><a class="header-anchor" href="#components" aria-hidden="true">#</a> Components</h1><p>All the components are prefixed with <code>Bulma</code> and related types for props, events, and types are also prefixed with <code>Bulma</code>. *For simplictty&#39;s sake the prefix will be excluding on this page and in their header&#39;s</p><h2 id="component-ref-s" tabindex="-1"><a class="header-anchor" href="#component-ref-s" aria-hidden="true">#</a> Component <code>ref</code>&#39;s</h2><p>When using <code>ref</code> on a Bulma component will always return an empty object as by default, all components have no properties exposed making <code>refs</code> bare. There is currently no way to expose any props or data of a component.</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BulmaHeading</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> from vue<span class="token punctuation">;</span>

    <span class="token comment">// header will either be null or an empty object</span>
    <span class="token keyword">const</span> header <span class="token operator">=</span> ref<span class="token operator">&lt;</span>BulmaHeading <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// {}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="common-props" tabindex="-1"><a class="header-anchor" href="#common-props" aria-hidden="true">#</a> Common Props</h2><h3 id="universal-props" tabindex="-1"><a class="header-anchor" href="#universal-props" aria-hidden="true">#</a> Universal Props</h3><p>These props can be used on any component</p><ul><li>tag</li><li>....</li></ul><p>A simple lookup of what props are avaible for which components</p><table><thead><tr><th>Components/Props</th><th>tag</th><th>colour</th><th>size</th><th>alignment</th></tr></thead><tbody><tr><td>................................................................</td><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="component-list" tabindex="-1"><a class="header-anchor" href="#component-list" aria-hidden="true">#</a> Component list</h2><h3 id="form-components" tabindex="-1"><a class="header-anchor" href="#form-components" aria-hidden="true">#</a> Form Components</h3><ul><li><a href="./FormInput">FormInput</a></li><li><a href="./FormFileInput">FormFileInput</a></li><li><a href="./Select">Select</a></li></ul><h4 id="groups-containers" tabindex="-1"><a class="header-anchor" href="#groups-containers" aria-hidden="true">#</a> Groups/Containers</h4>`,15),d=n("h3",{id:"containers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#containers","aria-hidden":"true"},"#"),a(" Containers")],-1),m=n("h3",{id:"elements",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#elements","aria-hidden":"true"},"#"),a(" Elements")],-1);function h(k,v){const s=p("RouterLink");return l(),c("div",null,[u,n("ul",null,[n("li",null,[e(s,{to:"/components/FormField.html"},{default:t(()=>[a("FormField")]),_:1})]),n("li",null,[e(s,{to:"/components/FormControlGroup.html"},{default:t(()=>[a("FormControlGroup")]),_:1})]),n("li",null,[e(s,{to:"/components/FormControl.html"},{default:t(()=>[a("FormControl")]),_:1})])]),d,n("ul",null,[n("li",null,[e(s,{to:"/components/Box.html"},{default:t(()=>[a("Box")]),_:1})]),n("li",null,[e(s,{to:"/components/Block.html"},{default:t(()=>[a("Block")]),_:1})])]),m,n("ul",null,[n("li",null,[e(s,{to:"/components/Image.html"},{default:t(()=>[a("Image")]),_:1})])])])}const b=o(r,[["render",h],["__file","index.html.vue"]]);export{b as default};
