import{_ as s,M as l,p as n,q as r,R as e,t as i,N as o,a1 as t}from"./framework-96b046e1.js";const d={},c=t('<h1 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h1><p>The types and helper functions found throughout are used to simplify development and types used by components. Many of the types and functions are exported for use and are recommended to use in conjuction with the components especially if building with Typescript.</p><h2 id="types-variants-types-of-types-classification-index-glossary-of-types" tabindex="-1"><a class="header-anchor" href="#types-variants-types-of-types-classification-index-glossary-of-types" aria-hidden="true">#</a> Types variants || types of types || Classification || Index/glossary of types</h2><h2 id="types" tabindex="-1"><a class="header-anchor" href="#types" aria-hidden="true">#</a> Types</h2><p>These are type aliases for simple class options or interfaces for more complex class lists for components.</p><h3 id="helpers" tabindex="-1"><a class="header-anchor" href="#helpers" aria-hidden="true">#</a> Helpers</h3><p>Defines types/interfaces that wrap Bulma options or common classes/features of components.</p><h3 id="interfaces" tabindex="-1"><a class="header-anchor" href="#interfaces" aria-hidden="true">#</a> Interfaces</h3><p>Usually a wrapper of a simpler types used in conjustion to form a more complex series of Bulma classes</p>',9),h={id:"bulmaheadingtypes-type-alias-string-bulma-titles",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#bulmaheadingtypes-type-alias-string-bulma-titles","aria-hidden":"true"},"#",-1),p=e("code",null,"string",-1),m={href:"https://bulma.io/documentation/title",target:"_blank",rel:"noopener noreferrer"},f=e("ul",null,[e("li",null,[e("code",null,"title")]),e("li",null,[e("code",null,"subtitle")])],-1),y={id:"bulma-image",tabindex:"-1"},b=e("a",{class:"header-anchor",href:"#bulma-image","aria-hidden":"true"},"#",-1),_={href:"https://bulma.io/documentation/image",target:"_blank",rel:"noopener noreferrer"},g=t('<h5 id="bulmaaspectratio-type-alias-string" tabindex="-1"><a class="header-anchor" href="#bulmaaspectratio-type-alias-string" aria-hidden="true">#</a> BulmaAspectRatio - type alias <code>string</code></h5><ul><li><code>square</code></li><li><code>1by1</code></li><li><code>5by4</code></li><li><code>4by3</code></li><li><code>3by2</code></li><li><code>5by3</code></li><li><code>16by9</code></li><li><code>2by1</code></li><li><code>3by1</code></li><li><code>4by5</code></li><li><code>3by4</code></li><li><code>2by3</code></li><li><code>3by5</code></li><li><code>9by16</code></li><li><code>1by2</code></li><li><code>1by3</code></li></ul><h5 id="bulmadimensions-number" tabindex="-1"><a class="header-anchor" href="#bulmadimensions-number" aria-hidden="true">#</a> BulmaDimensions - number</h5><ul><li>16</li><li>24</li><li>32</li><li>48</li><li>64</li><li>92</li><li>128</li></ul>',4),x={id:"bulmabuttoncolours-type-alias-string-bulma-colours",tabindex:"-1"},B=e("a",{class:"header-anchor",href:"#bulmabuttoncolours-type-alias-string-bulma-colours","aria-hidden":"true"},"#",-1),v=e("code",null,"string",-1),w={href:"https://bulma.io/documentation/helpers",target:"_blank",rel:"noopener noreferrer"},k=t('<ul><li><code>text</code></li><li><code>ghost</code></li></ul><h4 id="bulmacolours-type-alias-string" tabindex="-1"><a class="header-anchor" href="#bulmacolours-type-alias-string" aria-hidden="true">#</a> BulmaColours - type alias <code>string</code></h4><ul><li><code>info</code></li><li><code>danger</code></li><li><code>warning</code></li><li><code>success</code></li><li><code>primary</code></li><li><code>link</code></li><li><code>white</code></li><li><code>black</code></li><li><code>light</code></li><li><code>dark</code></li><li><code>default</code></li></ul><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h2><p>The following functions are side-effects free but lack use outside of the component SFC use with discretion as they are specialized for their related SFC component within the package. Use not recommended.</p><h3 id="getters" tabindex="-1"><a class="header-anchor" href="#getters" aria-hidden="true">#</a> Getters</h3><p>The getter functions can help with retireiveing all valid entries in a type alias ex. <code>BulmaColour</code> or transforming a type to it<code>s relatedd Bulma class. Ex.</code>ghost<code>-&gt;</code>is-ghost`</p>',7);function T(C,I){const a=l("ExternalLinkIcon");return n(),r("div",null,[c,e("h4",h,[u,i(" BulmaHeadingTypes - type alias "),p,i(" | "),e("a",m,[i("Bulma Titles"),o(a)])]),f,e("h4",y,[b,i(),e("a",_,[i("Bulma Image"),o(a)])]),g,e("h4",x,[B,i(" BulmaButtonColours - type alias "),v,i(" | "),e("a",w,[i("Bulma Colours"),o(a)])]),k])}const E=s(d,[["render",T],["__file","types.html.vue"]]);export{E as default};
